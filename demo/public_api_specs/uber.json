{
  "openapi": "3.0.0",
  "info": {
    "title": "Uber API",
    "description": "API for Uber ride-hailing service",
    "version": "1.0.0",
    "contact": {
      "name": "Uber API Support",
      "url": "https://developer.uber.com/support",
      "email": "api-support@uber.com"
    }
  },
  "servers": [
    {
      "url": "https://api.uber.com/v1"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user details",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user details",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/rides": {
      "post": {
        "summary": "Request a ride",
        "tags": [
          "Rides"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RideRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ride requested successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/rides/{rideId}": {
      "get": {
        "summary": "Get ride details",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "rideId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ride details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "404": {
            "description": "Ride not found"
          }
        }
      },
      "put": {
        "summary": "Update ride status",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "rideId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RideStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ride status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Ride not found"
          }
        }
      }
    },
    "/drivers": {
      "post": {
        "summary": "Register a new driver",
        "tags": [
          "Drivers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Driver registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/drivers/{driverId}": {
      "get": {
        "summary": "Get driver details",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Driver details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "404": {
            "description": "Driver not found"
          }
        }
      },
      "put": {
        "summary": "Update driver details",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Driver not found"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "summary": "Process a payment",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "summary": "Get payment details",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreate": {
        "type": "object",
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RideRequest": {
        "type": "object",
        "required": [
          "userId",
          "pickupLocation",
          "dropoffLocation"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "dropoffLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "rideType": {
            "type": "string",
            "enum": [
              "UberX",
              "UberXL",
              "UberBLACK",
              "UberSUV"
            ]
          },
          "estimatedFare": {
            "type": "number"
          }
        }
      },
      "RideStatusUpdate": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "accepted",
              "started",
              "completed",
              "canceled"
            ]
          }
        }
      },
      "Ride": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "driverId": {
            "type": "string"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "dropoffLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "rideType": {
            "type": "string",
            "enum": [
              "UberX",
              "UberXL",
              "UberBLACK",
              "UberSUV"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "requested",
              "accepted",
              "started",
              "completed",
              "canceled"
            ]
          },
          "estimatedFare": {
            "type": "number"
          },
          "actualFare": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DriverCreate": {
        "type": "object",
        "required": [
          "email",
          "password",
          "firstName",
          "lastName",
          "licenseNumber",
          "vehicleInfo"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "vehicleInfo": {
            "$ref": "#/components/schemas/VehicleInfo"
          }
        }
      },
      "DriverUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "vehicleInfo": {
            "$ref": "#/components/schemas/VehicleInfo"
          }
        }
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "vehicleInfo": {
            "$ref": "#/components/schemas/VehicleInfo"
          },
          "rating": {
            "type": "number",
            "minimum": 0,
            "maximum": 5
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VehicleInfo": {
        "type": "object",
        "required": [
          "make",
          "model",
          "year",
          "licensePlate"
        ],
        "properties": {
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "licensePlate": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "required": [
          "rideId",
          "amount",
          "paymentMethod"
        ],
        "properties": {
          "rideId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "paypal",
              "apple_pay",
              "google_pay"
            ]
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rideId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "paypal",
              "apple_pay",
              "google_pay"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}