{
  "openapi": "3.0.0",
  "info": {
    "title": "Asana API",
    "description": "The Asana API for task and project management",
    "version": "1.0.0",
    "contact": {
      "name": "Asana Support",
      "url": "https://asana.com/support",
      "email": "support@asana.com"
    }
  },
  "servers": [
    {
      "url": "https://app.asana.com/api/1.0"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns the compact user records for all users in the specified workspace or organization.",
        "parameters": [
          {
            "name": "workspace",
            "in": "query",
            "description": "The workspace or organization to filter users on.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersList"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_gid}": {
      "get": {
        "summary": "Get a user",
        "description": "Returns the full user record for a single user.",
        "parameters": [
          {
            "name": "user_gid",
            "in": "path",
            "required": true,
            "description": "A string identifying a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "summary": "Get multiple workspaces",
        "description": "Returns the compact records for all workspaces visible to the authorized user.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspacesList"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_gid}": {
      "get": {
        "summary": "Get a workspace",
        "description": "Returns the full record for a single workspace.",
        "parameters": [
          {
            "name": "workspace_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the workspace or organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Get multiple projects",
        "description": "Returns the compact project records for some filtered set of projects.",
        "parameters": [
          {
            "name": "workspace",
            "in": "query",
            "description": "The workspace or organization to filter projects on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "The team to filter projects on.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsList"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a project",
        "description": "Creates a new project in the specified workspace or organization.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_gid}": {
      "get": {
        "summary": "Get a project",
        "description": "Returns the complete project record for a single project.",
        "parameters": [
          {
            "name": "project_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a project",
        "description": "A specific, existing project can be updated by making a PUT request on the URL for that project.",
        "parameters": [
          {
            "name": "project_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "description": "A specific, existing project can be deleted by making a DELETE request on the URL for that project.",
        "parameters": [
          {
            "name": "project_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the project.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response (no content)"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get multiple tasks",
        "description": "Returns the compact task records for some filtered set of tasks.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "description": "The project to filter tasks on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "section",
            "in": "query",
            "description": "The section to filter tasks on.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completed_since",
            "in": "query",
            "description": "Only return tasks that are either incomplete or that have been completed since this time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksList"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a task",
        "description": "Creates a new task.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_gid}": {
      "get": {
        "summary": "Get a task",
        "description": "Returns the complete task record for a single task.",
        "parameters": [
          {
            "name": "task_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a task",
        "description": "A specific, existing task can be updated by making a PUT request on the URL for that task.",
        "parameters": [
          {
            "name": "task_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "A specific, existing task can be deleted by making a DELETE request on the URL for that task.",
        "parameters": [
          {
            "name": "task_gid",
            "in": "path",
            "required": true,
            "description": "Globally unique identifier for the task.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response (no content)"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "gid": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "object",
            "properties": {
              "image_21x21": {
                "type": "string"
              },
              "image_27x27": {
                "type": "string"
              },
              "image_36x36": {
                "type": "string"
              },
              "image_60x60": {
                "type": "string"
              },
              "image_128x128": {
                "type": "string"
              }
            }
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        }
      },
      "UsersList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "gid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_organization": {
            "type": "boolean"
          }
        }
      },
      "WorkspacesList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "gid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "current_status": {
            "type": "object",
            "properties": {
              "color": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          }
        }
      },
      "ProjectsList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "ProjectCreate": {
        "type": "object",
        "required": [
          "name",
          "workspace"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "workspace": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ProjectUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "due_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "gid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "assignee": {
            "$ref": "#/components/schemas/User"
          },
          "completed": {
            "type": "boolean"
          },
          "due_on": {
            "type": "string",
            "format": "date"
          },
          "due_at": {
            "type": "string",
            "format": "date-time"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          }
        }
      },
      "TasksList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskCreate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "assignee": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workspace": {
            "type": "string"
          },
          "due_on": {
            "type": "string",
            "format": "date"
          },
          "due_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "assignee": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "due_on": {
            "type": "string",
            "format": "date"
          },
          "due_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}