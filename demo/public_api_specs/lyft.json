{
  "openapi": "3.0.0",
  "info": {
    "title": "Lyft API",
    "description": "API for interacting with Lyft ride-sharing services",
    "version": "1.0.0",
    "contact": {
      "name": "Lyft API Support",
      "url": "https://developer.lyft.com/support",
      "email": "api-support@lyft.com"
    }
  },
  "servers": [
    {
      "url": "https://api.lyft.com/v1"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List all users",
        "operationId": "listUsers",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of users to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of users to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "operationId": "updateUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "deleteUser",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/rides": {
      "post": {
        "summary": "Request a ride",
        "operationId": "requestRide",
        "tags": [
          "Rides"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RideRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ride requested successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List user's rides",
        "operationId": "listRides",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_progress",
                "completed",
                "cancelled"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ride"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rides/{rideId}": {
      "get": {
        "summary": "Get ride by ID",
        "operationId": "getRideById",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "rideId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "404": {
            "description": "Ride not found"
          }
        }
      },
      "put": {
        "summary": "Update ride status",
        "operationId": "updateRideStatus",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "rideId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RideStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ride status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ride"
                }
              }
            }
          },
          "404": {
            "description": "Ride not found"
          }
        }
      },
      "delete": {
        "summary": "Cancel ride",
        "operationId": "cancelRide",
        "tags": [
          "Rides"
        ],
        "parameters": [
          {
            "name": "rideId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Ride cancelled successfully"
          },
          "404": {
            "description": "Ride not found"
          }
        }
      }
    },
    "/drivers": {
      "post": {
        "summary": "Register a new driver",
        "operationId": "registerDriver",
        "tags": [
          "Drivers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Driver registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List all drivers",
        "operationId": "listDrivers",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drivers/{driverId}": {
      "get": {
        "summary": "Get driver by ID",
        "operationId": "getDriverById",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "404": {
            "description": "Driver not found"
          }
        }
      },
      "put": {
        "summary": "Update driver information",
        "operationId": "updateDriver",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "404": {
            "description": "Driver not found"
          }
        }
      },
      "delete": {
        "summary": "Deactivate driver",
        "operationId": "deactivateDriver",
        "tags": [
          "Drivers"
        ],
        "parameters": [
          {
            "name": "driverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Driver deactivated successfully"
          },
          "404": {
            "description": "Driver not found"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "summary": "Process a payment",
        "operationId": "processPayment",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List payments",
        "operationId": "listPayments",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rideId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "summary": "Submit a rating",
        "operationId": "submitRating",
        "tags": [
          "Ratings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rating"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List ratings",
        "operationId": "listRatings",
        "tags": [
          "Ratings"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driverId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rideId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreate": {
        "type": "object",
        "required": [
          "email",
          "password",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RideRequest": {
        "type": "object",
        "required": [
          "userId",
          "pickupLocation",
          "dropoffLocation"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "dropoffLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "rideType": {
            "type": "string",
            "enum": [
              "standard",
              "xl",
              "lux"
            ]
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RideStatusUpdate": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "accepted",
              "in_progress",
              "completed",
              "cancelled"
            ]
          }
        }
      },
      "Ride": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "driverId": {
            "type": "string"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "dropoffLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "in_progress",
              "completed",
              "cancelled"
            ]
          },
          "rideType": {
            "type": "string",
            "enum": [
              "standard",
              "xl",
              "lux"
            ]
          },
          "fare": {
            "type": "number"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Location": {
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "DriverCreate": {
        "type": "object",
        "required": [
          "email",
          "password",
          "firstName",
          "lastName",
          "phoneNumber",
          "licenseNumber",
          "carDetails"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "carDetails": {
            "$ref": "#/components/schemas/CarDetails"
          }
        }
      },
      "DriverUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "carDetails": {
            "$ref": "#/components/schemas/CarDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        }
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "licenseNumber": {
            "type": "string"
          },
          "carDetails": {
            "$ref": "#/components/schemas/CarDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "rating": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CarDetails": {
        "type": "object",
        "required": [
          "make",
          "model",
          "year",
          "color",
          "licensePlate"
        ],
        "properties": {
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "required": [
          "userId",
          "rideId",
          "amount",
          "paymentMethod"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "rideId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "paypal",
              "apple_pay",
              "google_pay"
            ]
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "rideId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "credit_card",
              "paypal",
              "apple_pay",
              "google_pay"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RatingCreate": {
        "type": "object",
        "required": [
          "userId",
          "driverId",
          "rideId",
          "rating"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "driverId": {
            "type": "string"
          },
          "rideId": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "driverId": {
            "type": "string"
          },
          "rideId": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          "comment": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}