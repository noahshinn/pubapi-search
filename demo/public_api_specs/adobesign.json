{
  "openapi": "3.0.0",
  "info": {
    "title": "Adobe Sign API",
    "description": "API for interacting with Adobe Sign e-signature service",
    "version": "1.0.0",
    "contact": {
      "name": "Adobe Sign Support",
      "url": "https://www.adobe.com/sign/support.html",
      "email": "adobesign-support@adobe.com"
    }
  },
  "servers": [
    {
      "url": "https://api.na1.adobesign.com/api/rest/v6",
      "description": "Adobe Sign API Production Server"
    }
  ],
  "paths": {
    "/agreements": {
      "get": {
        "summary": "Get agreements",
        "description": "Retrieves agreements for the user",
        "operationId": "getAgreements",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query to filter agreements",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of agreements to retrieve",
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "OUT_FOR_SIGNATURE",
                "SIGNED",
                "APPROVED",
                "CANCELLED",
                "EXPIRED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementList"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create agreement",
        "description": "Creates a new agreement",
        "operationId": "createAgreement",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgreementCreationInfo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agreement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_write"
            ]
          }
        ]
      }
    },
    "/agreements/{agreementId}": {
      "get": {
        "summary": "Get agreement info",
        "description": "Retrieves detailed information about an agreement",
        "operationId": "getAgreementInfo",
        "parameters": [
          {
            "name": "agreementId",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agreement not found"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_read"
            ]
          }
        ]
      }
    },
    "/agreements/{agreementId}/documents": {
      "get": {
        "summary": "Get agreement documents",
        "description": "Retrieves the IDs of all documents associated with an agreement",
        "operationId": "getAgreementDocuments",
        "parameters": [
          {
            "name": "agreementId",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agreement not found"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_read"
            ]
          }
        ]
      }
    },
    "/agreements/{agreementId}/documents/{documentId}": {
      "get": {
        "summary": "Get agreement document",
        "description": "Retrieves a single document file associated with an agreement",
        "operationId": "getAgreementDocument",
        "parameters": [
          {
            "name": "agreementId",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "The document ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agreement or document not found"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_read"
            ]
          }
        ]
      }
    },
    "/agreements/{agreementId}/members": {
      "get": {
        "summary": "Get agreement members",
        "description": "Retrieves information about the members of an agreement",
        "operationId": "getAgreementMembers",
        "parameters": [
          {
            "name": "agreementId",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementMembers"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agreement not found"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_read"
            ]
          }
        ]
      }
    },
    "/agreements/{agreementId}/reminders": {
      "post": {
        "summary": "Send agreement reminder",
        "description": "Sends a reminder to the next signer of an agreement",
        "operationId": "sendAgreementReminder",
        "parameters": [
          {
            "name": "agreementId",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderInfo"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Reminder sent successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agreement not found"
          }
        },
        "security": [
          {
            "OAuth2": [
              "agreement_write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AgreementList": {
        "type": "object",
        "properties": {
          "userAgreementList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementInfo"
            }
          }
        }
      },
      "AgreementInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "OUT_FOR_SIGNATURE",
              "SIGNED",
              "APPROVED",
              "CANCELLED",
              "EXPIRED"
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastEventDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AgreementCreationInfo": {
        "type": "object",
        "properties": {
          "fileInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileInfo"
            }
          },
          "name": {
            "type": "string"
          },
          "participantSetsInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantSetInfo"
            }
          },
          "signatureType": {
            "type": "string",
            "enum": [
              "ESIGN",
              "WRITTEN"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "DRAFT",
              "IN_PROCESS"
            ]
          }
        }
      },
      "FileInfo": {
        "type": "object",
        "properties": {
          "transientDocumentId": {
            "type": "string"
          }
        }
      },
      "ParticipantSetInfo": {
        "type": "object",
        "properties": {
          "memberInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantInfo"
            }
          },
          "order": {
            "type": "integer"
          },
          "role": {
            "type": "string",
            "enum": [
              "SIGNER",
              "APPROVER",
              "ACCEPTOR",
              "CERTIFIED_RECIPIENT",
              "FORM_FILLER",
              "DELEGATE_TO_SIGNER",
              "DELEGATE_TO_APPROVER",
              "DELEGATE_TO_ACCEPTOR",
              "DELEGATE_TO_CERTIFIED_RECIPIENT",
              "DELEGATE_TO_FORM_FILLER"
            ]
          }
        }
      },
      "ParticipantInfo": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "AgreementCreationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "AgreementDocuments": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentInfo"
            }
          }
        }
      },
      "DocumentInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        }
      },
      "AgreementMembers": {
        "type": "object",
        "properties": {
          "participantSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantSet"
            }
          }
        }
      },
      "ParticipantSet": {
        "type": "object",
        "properties": {
          "memberInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantInfo"
            }
          },
          "order": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ReminderInfo": {
        "type": "object",
        "properties": {
          "recipientParticipantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "note": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://secure.na1.adobesign.com/public/oauth",
            "tokenUrl": "https://api.na1.adobesign.com/oauth/token",
            "scopes": {
              "agreement_read": "Read agreement information",
              "agreement_write": "Create and modify agreements",
              "agreement_send": "Send agreements"
            }
          }
        }
      }
    }
  }
}