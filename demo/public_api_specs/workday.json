{
  "openapi": "3.0.0",
  "info": {
    "title": "Workday API",
    "description": "API for interacting with Workday HR and Finance systems",
    "version": "1.0.0",
    "contact": {
      "name": "Workday API Support",
      "url": "https://www.workday.com/api-support",
      "email": "api-support@workday.com"
    }
  },
  "servers": [
    {
      "url": "https://api.workday.com/v1"
    }
  ],
  "paths": {
    "/employees": {
      "get": {
        "summary": "List employees",
        "description": "Retrieve a list of employees",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Number of employees to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of employees to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create employee",
        "description": "Create a new employee record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{employeeId}": {
      "get": {
        "summary": "Get employee",
        "description": "Retrieve details of a specific employee",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "summary": "Update employee",
        "description": "Update details of a specific employee",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "summary": "Delete employee",
        "description": "Delete a specific employee",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted successfully"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/payroll": {
      "get": {
        "summary": "List payroll entries",
        "description": "Retrieve a list of payroll entries",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for payroll entries"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for payroll entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create payroll entry",
        "description": "Create a new payroll entry",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollEntryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payroll entry created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollEntry"
                }
              }
            }
          }
        }
      }
    },
    "/time-off": {
      "get": {
        "summary": "List time-off requests",
        "description": "Retrieve a list of time-off requests",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by employee ID"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "rejected"
              ]
            },
            "description": "Filter by request status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeOffRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create time-off request",
        "description": "Create a new time-off request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeOffRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Time-off request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeOffRequest"
                }
              }
            }
          }
        }
      }
    },
    "/performance-reviews": {
      "get": {
        "summary": "List performance reviews",
        "description": "Retrieve a list of performance reviews",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by employee ID"
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by review year"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformanceReview"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create performance review",
        "description": "Create a new performance review",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReviewInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Performance review created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReview"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "hireDate": {
            "type": "string",
            "format": "date"
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          }
        }
      },
      "EmployeeInput": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "hireDate",
          "position",
          "department",
          "salary"
        ],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "hireDate": {
            "type": "string",
            "format": "date"
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          }
        }
      },
      "PayrollEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "payPeriodStart": {
            "type": "string",
            "format": "date"
          },
          "payPeriodEnd": {
            "type": "string",
            "format": "date"
          },
          "grossPay": {
            "type": "number"
          },
          "netPay": {
            "type": "number"
          },
          "deductions": {
            "type": "object"
          }
        }
      },
      "PayrollEntryInput": {
        "type": "object",
        "required": [
          "employeeId",
          "payPeriodStart",
          "payPeriodEnd",
          "grossPay",
          "netPay"
        ],
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "payPeriodStart": {
            "type": "string",
            "format": "date"
          },
          "payPeriodEnd": {
            "type": "string",
            "format": "date"
          },
          "grossPay": {
            "type": "number"
          },
          "netPay": {
            "type": "number"
          },
          "deductions": {
            "type": "object"
          }
        }
      },
      "TimeOffRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string",
            "enum": [
              "vacation",
              "sick",
              "personal"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected"
            ]
          }
        }
      },
      "TimeOffRequestInput": {
        "type": "object",
        "required": [
          "employeeId",
          "startDate",
          "endDate",
          "type"
        ],
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string",
            "enum": [
              "vacation",
              "sick",
              "personal"
            ]
          }
        }
      },
      "PerformanceReview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "reviewerId": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "overallRating": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "goals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PerformanceReviewInput": {
        "type": "object",
        "required": [
          "employeeId",
          "reviewerId",
          "year",
          "overallRating"
        ],
        "properties": {
          "employeeId": {
            "type": "string"
          },
          "reviewerId": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "overallRating": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "goals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}