{
  "openapi": "3.0.0",
  "info": {
    "title": "Stripe API",
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "version": "2020-08-27",
    "contact": {
      "name": "Stripe Support",
      "url": "https://support.stripe.com/",
      "email": "support@stripe.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://api.stripe.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Charges",
      "description": "Create and manage one-time charges"
    },
    {
      "name": "Customers",
      "description": "Create and manage customers"
    },
    {
      "name": "Products",
      "description": "Create and manage products"
    },
    {
      "name": "Prices",
      "description": "Create and manage prices for products"
    },
    {
      "name": "PaymentIntents",
      "description": "Create and manage payment intents"
    },
    {
      "name": "PaymentMethods",
      "description": "Create and manage payment methods"
    },
    {
      "name": "Subscriptions",
      "description": "Create and manage subscriptions"
    },
    {
      "name": "Invoices",
      "description": "Create and manage invoices"
    },
    {
      "name": "Refunds",
      "description": "Create and manage refunds"
    },
    {
      "name": "Disputes",
      "description": "Manage disputes"
    },
    {
      "name": "Tokens",
      "description": "Create tokens for sensitive information"
    },
    {
      "name": "Balance",
      "description": "Retrieve account balance"
    },
    {
      "name": "Events",
      "description": "Retrieve events"
    }
  ],
  "paths": {
    "/charges": {
      "post": {
        "tags": [
          "Charges"
        ],
        "summary": "Create a charge",
        "description": "To charge a credit card or other payment source, you create a Charge object.",
        "operationId": "createCharge",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateChargeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "List all charges",
        "description": "Returns a list of charges you've previously created.",
        "operationId": "listCharges",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "A cursor for use in pagination.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Charge"
                      }
                    },
                    "has_more": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/charges/{charge_id}": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "Retrieve a charge",
        "description": "Retrieves the details of a charge that has previously been created.",
        "operationId": "retrieveCharge",
        "parameters": [
          {
            "name": "charge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the charge to be retrieved",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a customer",
        "description": "Creates a new customer object.",
        "operationId": "createCustomer",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List all customers",
        "description": "Returns a list of your customers.",
        "operationId": "listCustomers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "A cursor for use in pagination.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "has_more": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payment_intents": {
      "post": {
        "tags": [
          "PaymentIntents"
        ],
        "summary": "Create a PaymentIntent",
        "description": "Creates a PaymentIntent object.",
        "operationId": "createPaymentIntent",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentIntentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntent"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create a subscription",
        "description": "Creates a new subscription on an existing customer.",
        "operationId": "createSubscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/balance": {
      "get": {
        "tags": [
          "Balance"
        ],
        "summary": "Retrieve balance",
        "description": "Retrieves the current account balance.",
        "operationId": "retrieveBalance",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateChargeRequest": {
        "type": "object",
        "required": [
          "amount",
          "currency",
          "source"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Amount in cents to be charged"
          },
          "currency": {
            "type": "string",
            "description": "Three-letter ISO currency code"
          },
          "source": {
            "type": "string",
            "description": "A payment source to be charged, such as a credit card"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string attached to the object"
          }
        }
      },
      "Charge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "charge"
            ]
          },
          "amount": {
            "type": "integer"
          },
          "amount_refunded": {
            "type": "integer"
          },
          "balance_transaction": {
            "type": "string"
          },
          "captured": {
            "type": "boolean"
          },
          "created": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "payment_method": {
            "type": "string"
          },
          "refunded": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "succeeded",
              "pending",
              "failed"
            ]
          }
        }
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Customer's email address"
          },
          "name": {
            "type": "string",
            "description": "Customer's full name or business name"
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object"
          },
          "source": {
            "type": "string",
            "description": "The source can either be a token, like the ones returned by Stripe.js, or a dictionary containing a user's credit card details"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "customer"
            ]
          },
          "created": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "default_source": {
            "type": "string"
          }
        }
      },
      "CreatePaymentIntentRequest": {
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Amount intended to be collected by this PaymentIntent"
          },
          "currency": {
            "type": "string",
            "description": "Three-letter ISO currency code"
          },
          "payment_method_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of payment method types that this PaymentIntent is allowed to use"
          }
        }
      },
      "PaymentIntent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "payment_intent"
            ]
          },
          "amount": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "requires_payment_method",
              "requires_confirmation",
              "requires_action",
              "processing",
              "requires_capture",
              "canceled",
              "succeeded"
            ]
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "required": [
          "customer",
          "items"
        ],
        "properties": {
          "customer": {
            "type": "string",
            "description": "The identifier of the customer to subscribe"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "string",
                  "description": "The identifier of the price to subscribe to"
                }
              }
            },
            "description": "A list of prices and quantities that this subscription should contain"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "subscription"
            ]
          },
          "current_period_end": {
            "type": "integer"
          },
          "current_period_start": {
            "type": "integer"
          },
          "customer": {
            "type": "string"
          },
          "items": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "price": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "past_due",
              "canceled",
              "unpaid"
            ]
          }
        }
      },
      "Balance": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "balance"
            ]
          },
          "available": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "pending": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "code": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}